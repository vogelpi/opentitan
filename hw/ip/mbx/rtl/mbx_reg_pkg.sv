// Copyright lowRISC contributors (OpenTitan project).
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0
//
// Register Package auto-generated by `reggen` containing data structure

package mbx_reg_pkg;

  // Address widths within the block
  parameter int HostAw = 4;
  parameter int SysAw = 1;

  ///////////////////////////////////////////////
  // Typedefs for registers for host interface //
  ///////////////////////////////////////////////

  typedef struct packed {
    logic        q;
  } mbx_reg2hw_intr_state_reg_t;

  typedef struct packed {
    logic        q;
  } mbx_reg2hw_intr_enable_reg_t;

  typedef struct packed {
    logic        q;
    logic        qe;
  } mbx_reg2hw_intr_test_reg_t;

  typedef struct packed {
    logic        d;
    logic        de;
  } mbx_hw2reg_intr_state_reg_t;

  // Register -> HW type for host interface
  typedef struct packed {
    mbx_reg2hw_intr_state_reg_t intr_state; // [3:3]
    mbx_reg2hw_intr_enable_reg_t intr_enable; // [2:2]
    mbx_reg2hw_intr_test_reg_t intr_test; // [1:0]
  } mbx_host_reg2hw_t;

  // HW -> register type for host interface
  typedef struct packed {
    mbx_hw2reg_intr_state_reg_t intr_state; // [1:0]
  } mbx_host_hw2reg_t;

  // Register offsets for host interface
  parameter logic [HostAw-1:0] MBX_INTR_STATE_OFFSET = 4'h 0;
  parameter logic [HostAw-1:0] MBX_INTR_ENABLE_OFFSET = 4'h 4;
  parameter logic [HostAw-1:0] MBX_INTR_TEST_OFFSET = 4'h 8;

  // Reset values for hwext registers and their fields for host interface
  parameter logic [0:0] MBX_INTR_TEST_RESVAL = 1'h 0;
  parameter logic [0:0] MBX_INTR_TEST_MBX_READY_RESVAL = 1'h 0;

  // Register index for host interface
  typedef enum int {
    MBX_INTR_STATE,
    MBX_INTR_ENABLE,
    MBX_INTR_TEST
  } mbx_host_id_e;

  // Register width information to check illegal writes for host interface
  parameter logic [3:0] MBX_HOST_PERMIT [3] = '{
    4'b 0001, // index[0] MBX_INTR_STATE
    4'b 0001, // index[1] MBX_INTR_ENABLE
    4'b 0001  // index[2] MBX_INTR_TEST
  };

endpackage
