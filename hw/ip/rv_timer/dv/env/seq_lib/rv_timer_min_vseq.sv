// Copyright lowRISC contributors (OpenTitan project).
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0

class rv_timer_min_vseq extends rv_timer_random_vseq;
  `uvm_object_utils(rv_timer_min_vseq)
  `uvm_object_new


  // Prescaler force to min.
  constraint prescale_c {
    foreach (prescale[i]) {
      prescale[i] == 0;
    }
  }

  // Step forced to min
  constraint step_c {
    foreach (step[i]) {
      step[i] dist {
        0 :/ 50, // minimum value, disables the count
        1 :/ 50  // minimum count to increase
      };
    }
  }

  // Timer expiry needs to occur within reasonable amount of time (up to 5 cycles).
  constraint timer_exp_c {
    foreach (en_harts[i]) {
      timer_val[i] == 0;
      foreach (en_timers[j]) {
        // set to a value greater than 0 sometimes to allow an interrupt to be generated by making the timer increase
        // and not just right after configuring both mtime and mtimecmp
        compare_val[i][j] < 5;
      }
    }
  }


endclass : rv_timer_min_vseq
